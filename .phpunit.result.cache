C:37:"PHPUnit\Runner\DefaultTestResultCache":38132:{a:2:{s:7:"defects";a:174:{s:126:"AMBERSIVE\Tests\Feature\Controller\ForgotPasswordControllerTest::testIfForgotPasswordWillReturnStatusSuccessfulIfAccountExists";i:4;s:136:"AMBERSIVE\Tests\Feature\Controller\ForgotPasswordControllerTest::testIfForgotPasswordWillReturnStatusSuccessfulEvenIfAccountDoesnotExist";i:4;s:101:"AMBERSIVE\Tests\Feature\Controller\ForgotPasswordControllerTest::testIfForgotPasswordWillTriggerEvent";i:4;s:111:"AMBERSIVE\Tests\Feature\Controller\ForgotPasswordControllerTest::testIfForgotPasswordEventListenerReactsToEvent";i:4;s:126:"AMBERSIVE\Tests\Feature\Controller\ForgotPasswordControllerTest::testIfForgotPasswordWillCreateAndEntryInDatabaseWithResetCode";i:4;s:110:"AMBERSIVE\Tests\Feature\Controller\ForgotPasswordControllerTest::testIfForgotPasswordWillTriggerSendingAnEmail";i:4;s:110:"AMBERSIVE\Tests\Feature\Controller\ForgotPasswordControllerTest::testIfForgotPasswordMailWillContainAResetCode";i:4;s:100:"AMBERSIVE\Tests\Feature\Controller\ForgotPasswordControllerTest::testIfSetPasswordNeedsEmailOrUserId";i:4;s:110:"AMBERSIVE\Tests\Feature\Controller\ForgotPasswordControllerTest::testIfSetPasswordFailsIfNotOldPasswordIsGiven";i:4;s:114:"AMBERSIVE\Tests\Feature\Controller\ForgotPasswordControllerTest::testIfSetPasswordFailsAlsoIfNoResetCodeIsProvided";i:4;s:102:"AMBERSIVE\Tests\Feature\Controller\ForgotPasswordControllerTest::testIfSetPasswordChecksIfUserIdExists";i:4;s:101:"AMBERSIVE\Tests\Feature\Controller\ForgotPasswordControllerTest::testIfSetPasswordChecksIfEmailExists";i:4;s:114:"AMBERSIVE\Tests\Feature\Controller\ForgotPasswordControllerTest::testIfSetPasswordFailsIfTheResetCodeIsAlreadyUsed";i:3;s:110:"AMBERSIVE\Tests\Feature\Controller\ForgotPasswordControllerTest::testIfSetPasswordFailsIfTheResetCodeIsExpired";i:3;s:136:"AMBERSIVE\Tests\Feature\Controller\ForgotPasswordControllerTest::testIfSetPasswordWillNotReturnExpiredTokenIfRequestIsWithinTheTimeframe";i:4;s:122:"AMBERSIVE\Tests\Feature\Controller\ForgotPasswordControllerTest::testIfSetPasswordWIllFailIfTheGivenOldPasswordIsIncorrect";i:3;s:108:"AMBERSIVE\Tests\Feature\Controller\ForgotPasswordControllerTest::testIfSetPasswordWorksIfOldPasswordIsPassed";i:3;s:111:"AMBERSIVE\Tests\Feature\Controller\ForgotPasswordControllerTest::testIfSetPasswordWorksIfValidResetCodeIsPassed";i:3;s:92:"AMBERSIVE\Tests\Feature\Controller\LoginControllerTest::testLoginWorksWithCorrectCredentials";i:4;s:91:"AMBERSIVE\Tests\Feature\Controller\LoginControllerTest::testIfLoginRequiresEmailAndPassword";i:4;s:89:"AMBERSIVE\Tests\Feature\Controller\LoginControllerTest::testIfLoginRequiresAExisitingUser";i:4;s:87:"AMBERSIVE\Tests\Feature\Controller\LoginControllerTest::testIfLoginRequiresAnActiveUser";i:4;s:99:"AMBERSIVE\Tests\Feature\Controller\LoginControllerTest::testIfLoginRequiresAnUserWithAVerifiedEMail";i:4;s:95:"AMBERSIVE\Tests\Feature\Controller\LoginControllerTest::testIfLoginRequiresAnUserWhoIsNotLocked";i:4;s:94:"AMBERSIVE\Tests\Feature\Controller\LoginControllerTest::testIfLoginWillFailIfTriedAfterALocked";i:4;s:95:"AMBERSIVE\Tests\Feature\Controller\LoginControllerTest::testIfLoginRequiresAUserWhoIsNotDeleted";i:4;s:96:"AMBERSIVE\Tests\Feature\Controller\LoginControllerTest::testIfRefreshTokenReturnsANewBearerToken";i:3;s:95:"AMBERSIVE\Tests\Feature\Controller\RegisterControllerTest::testIfRegistrationFailsDueValidation";i:4;s:100:"AMBERSIVE\Tests\Feature\Controller\RegisterControllerTest::testIfRegistrationFailsIfEmailAlreadyUsed";i:4;s:103:"AMBERSIVE\Tests\Feature\Controller\RegisterControllerTest::testIfRegistrationFailsIfUsernameAlreadyUsed";i:4;s:94:"AMBERSIVE\Tests\Feature\Controller\RegisterControllerTest::testIfRegistrationWillCreateAccount";i:3;s:94:"AMBERSIVE\Tests\Feature\Controller\RegisterControllerTest::testIfRegisteredUserWillNotBeActive";i:4;s:127:"AMBERSIVE\Tests\Feature\Controller\RegisterControllerTest::testIfRegistrationWithoutAutomaticActivationWillSendAnActivationMail";i:4;s:100:"AMBERSIVE\Tests\Feature\Controller\RegisterControllerTest::testIfRegistrationFlowWithActivationWorks";i:4;s:114:"AMBERSIVE\Tests\Feature\Controller\RegisterControllerTest::testIfRegistrationFlowWithAcceptHtmlWillCauseAnRedirect";i:4;s:97:"AMBERSIVE\Tests\Feature\Controller\RegisterControllerTest::testIfActivationWillFailIfUserIsLocked";i:4;s:106:"AMBERSIVE\Tests\Feature\Controller\RegisterControllerTest::testIfActivationWillFailIfUserIsAlreadyVerified";i:4;s:111:"AMBERSIVE\Tests\Feature\Controller\RegisterControllerTest::testIfActivationWillFailAndWillRedirectToFailureSite";i:4;s:89:"AMBERSIVE\Tests\Feature\Controller\UserControllerTest::testIfCurrentReturnsTheCurrentUser";i:3;s:117:"AMBERSIVE\Tests\Feature\Controller\UserControllerTest::testIfAnUnauthorizedRequestWillRecieveA401IfCurrentIsRequested";i:4;s:102:"AMBERSIVE\Tests\Feature\Controller\UserControllerTest::testIfAnotherUserCannotGetTheDataForAnotherUser";i:3;s:108:"AMBERSIVE\Tests\Feature\Controller\UserControllerTest::testIfUserHasThePermissionToAccessTheDataOfHisAccount";i:4;s:106:"AMBERSIVE\Tests\Feature\Controller\UserControllerTest::testIfUserCannotAccessHisDataIfPermissionsIsMissing";i:4;s:84:"AMBERSIVE\Tests\Unit\Classes\EndpointRequestTest::testIfModelWillBeSetAtConstruction";i:4;s:87:"AMBERSIVE\Tests\Unit\Classes\EndpointRequestTest::testIfResourceWillBeSetAtConstruction";i:4;s:89:"AMBERSIVE\Tests\Unit\Classes\EndpointRequestTest::testIfCollectionWillBeSetAtConstruction";i:4;s:96:"AMBERSIVE\Tests\Unit\Classes\EndpointRequestTest::testIfEndpointRequestLoadWillFillTheDataBucket";i:4;s:104:"AMBERSIVE\Tests\Unit\Classes\EndpointRequestTest::testIfEndpointRequestLoadWithAPassedIdWillASingleEntry";i:4;s:79:"AMBERSIVE\Tests\Unit\Classes\EndpointRequestTest::testEndpointRequestSetHandler";i:4;s:107:"AMBERSIVE\Tests\Unit\Classes\EndpointRequestTest::testEndpointRequestSetHandlerAcceptsAndTriggerTheCustomFn";i:4;s:112:"AMBERSIVE\Tests\Unit\Classes\EndpointRequestTest::testEndpointRequestRespondMethodIfItReturnsAValidJsonStructure";i:4;s:95:"AMBERSIVE\Tests\Unit\Classes\EndpointRequestTest::testEndpointRequestRespondResourceIfRequested";i:4;s:94:"AMBERSIVE\Tests\Unit\Classes\EndpointRequestTest::testIfEndpointRequestRequestDataContainsData";i:4;s:100:"AMBERSIVE\Tests\Unit\Classes\EndpointRequestTest::testIfEndpointRequestAddRequestDataAllowsToAddData";i:4;s:97:"AMBERSIVE\Tests\Unit\Classes\EndpointRequestTest::testIfEndpointRequestStoreMethodCreateANewEntry";i:4;s:95:"AMBERSIVE\Tests\Unit\Classes\EndpointRequestTest::testIfEndpointRequestDestroyWillDeleteAnEntry";i:4;s:99:"AMBERSIVE\Tests\Unit\Classes\EndpointRequestTest::testIfEndpointRequestDestroyWillFailForSecondTime";i:4;s:93:"AMBERSIVE\Tests\Unit\Classes\EndpointRequestTest::testIfEndpointReqestUpdateWillUpdateAnEntry";i:4;s:85:"AMBERSIVE\Tests\Unit\Classes\SchemaDeclarationTest::testIfSchemaDeclarationIsNotEmpty";i:4;s:97:"AMBERSIVE\Tests\Unit\Classes\SchemaDeclarationTest::testIfSchemaDeclarationUpdateWillUpdateParams";i:4;s:85:"AMBERSIVE\Tests\Unit\Classes\SchemaDeclarationTest::testIfToArrayMethodReturnsAnArray";i:4;s:96:"AMBERSIVE\Tests\Unit\Classes\SchemaDeclarationTest::testIfSchemaDeclarationContainsTypeAttribute";i:4;s:109:"AMBERSIVE\Tests\Unit\Classes\SchemaDeclarationTest::testIfSchemaDeclarationContainsASetDefaultEndpointsMethod";i:4;s:120:"AMBERSIVE\Tests\Unit\Classes\SchemaDeclarationTest::testIfSchemaDeclarationSetDefaultEndpointsWillAddTheDefaultEndpoints";i:4;s:90:"AMBERSIVE\Tests\Unit\Classes\SchemaDeclarationTest::testIfSchemaDeclartionsCanAddAEndpoint";i:4;s:96:"AMBERSIVE\Tests\Unit\Classes\SchemaDeclarationTest::testIfSchemaDeclarationEndpointsCanBeReseted";i:4;s:103:"AMBERSIVE\Tests\Unit\Classes\SchemaDeclarationTest::testIfSchemaDeclarationSetModelWillSetTheModelEntry";i:4;s:121:"AMBERSIVE\Tests\Unit\Classes\SchemaDeclarationTest::testIfSchemaDeclarationCreateNamespacePrefixForModelWillReturnAString";i:4;s:109:"AMBERSIVE\Tests\Unit\Classes\SchemaDeclarationTest::testIfSchemaDeclarationSetResourceWillSetTheResourceEntry";i:4;s:109:"AMBERSIVE\Tests\Unit\Classes\SchemaDeclarationTest::testIfSchemaDeclarationSetResourceEvenIfNoModelIsProvided";i:4;s:113:"AMBERSIVE\Tests\Unit\Classes\SchemaDeclarationTest::testIfSchemaDeclarationSetCollectionWillSetTheCollectionEntry";i:4;s:111:"AMBERSIVE\Tests\Unit\Classes\SchemaDeclarationTest::testIfSchemaDeclarationSetCollectionEvenIfNoModelIsProvided";i:4;s:79:"AMBERSIVE\Tests\Unit\Classes\SchemaEndpointTest::testIfSchemaEndpointIsNotEmpty";i:4;s:82:"AMBERSIVE\Tests\Unit\Classes\SchemaEndpointTest::testIfToArrayMethodReturnsAnArray";i:4;s:90:"AMBERSIVE\Tests\Unit\Classes\SchemaEndpointTest::testIfSchemaEndpointContainsTypeAttribute";i:4;s:73:"AMBERSIVE\Tests\Unit\Classes\SchemaFieldTest::testIfSchemaFieldIsNotEmpty";i:4;s:79:"AMBERSIVE\Tests\Unit\Classes\SchemaFieldTest::testIfToArrayMethodReturnsAnArray";i:4;s:84:"AMBERSIVE\Tests\Unit\Classes\SchemaFieldTest::testIfSchemaFieldContainsTypeAttribute";i:4;s:83:"AMBERSIVE\Tests\Unit\Classes\SchemaPermissionTest::testIfSchemaPermissionIsNotEmpty";i:4;s:84:"AMBERSIVE\Tests\Unit\Classes\SchemaPermissionTest::testIfToArrayMethodReturnsAnArray";i:4;s:94:"AMBERSIVE\Tests\Unit\Classes\SchemaPermissionTest::testIfSchemaPermissionContainsTypeAttribute";i:4;s:79:"AMBERSIVE\Tests\Unit\Classes\SchemaRelationTest::testIfSchemaRelationIsNotEmpty";i:4;s:82:"AMBERSIVE\Tests\Unit\Classes\SchemaRelationTest::testIfToArrayMethodReturnsAnArray";i:4;s:90:"AMBERSIVE\Tests\Unit\Classes\SchemaRelationTest::testIfSchemaRelationContainsTypeAttribute";i:4;s:71:"AMBERSIVE\Tests\Unit\Classes\SchemaRoleTest::testIfSchemaRoleIsNotEmpty";i:4;s:78:"AMBERSIVE\Tests\Unit\Classes\SchemaRoleTest::testIfToArrayMethodReturnsAnArray";i:4;s:82:"AMBERSIVE\Tests\Unit\Classes\SchemaRoleTest::testIfSchemaRoleContainsTypeAttribute";i:4;s:74:"AMBERSIVE\Tests\Unit\Console\MakeApiTest::testIfMakeApiWithoutCommandFails";i:4;s:72:"AMBERSIVE\Tests\Unit\Console\NewApiTest::testIfNewApiWithoutCommandFails";i:4;s:88:"AMBERSIVE\Tests\Unit\Console\NewApiTest::testIfNewApiWillCreateAMigrationFileForANewFile";i:4;s:70:"AMBERSIVE\Tests\Unit\Console\PrepareApiTest::testIfPrepareCommandWorks";i:3;s:69:"AMBERSIVE\Tests\Unit\Console\UpdateApiTest::testIfPrepareCommandWorks";i:3;s:95:"AMBERSIVE\ApiTests\Unit\Contoller\BaseApiControllerTest::testGetReturnFormatShouldReturnNotNull";i:4;s:81:"AMBERSIVE\ApiTests\Unit\Contoller\BaseApiControllerTest::testGetDefaultStatusCode";i:4;s:108:"AMBERSIVE\ApiTests\Unit\Contoller\BaseApiControllerTest::testSetReturnFormatShouldChangeTheReturnFormatValue";i:4;s:102:"AMBERSIVE\ApiTests\Unit\Contoller\BaseApiControllerTest::testControllerParamsShouldContainDownloadFlag";i:4;s:111:"AMBERSIVE\ApiTests\Unit\Contoller\BaseApiControllerTest::testControllerParamsShouldContainDownloadFlagWithFalse";i:4;s:81:"AMBERSIVE\ApiTests\Unit\Contoller\BaseApiControllerTest::testSettingTheStatusCode";i:4;s:75:"AMBERSIVE\ApiTests\Unit\Contoller\BaseApiControllerTest::testRespondSuccess";i:4;s:80:"AMBERSIVE\ApiTests\Unit\Contoller\BaseApiControllerTest::testRespondUnauthorized";i:4;s:77:"AMBERSIVE\ApiTests\Unit\Contoller\BaseApiControllerTest::testRespondForbidden";i:4;s:78:"AMBERSIVE\ApiTests\Unit\Contoller\BaseApiControllerTest::testRespondBadRequest";i:4;s:98:"AMBERSIVE\ApiTests\Unit\Contoller\BaseWebControllerTest::testRespondFileAsDownloadShouldReturnFile";i:3;s:116:"AMBERSIVE\ApiTests\Unit\Contoller\BaseWebControllerTest::testRespondFileAsDownloadShouldReturn404IfFileDoesNotExists";i:4;s:110:"AMBERSIVE\ApiTests\Unit\Contoller\BaseWebControllerTest::testIfRespondFileAsDownloadAcceptsTheProvidedFilename";i:3;s:97:"AMBERSIVE\ApiTests\Unit\Contoller\BaseWebControllerTest::testRespondFileInBrowserShouldReturnFile";i:3;s:108:"AMBERSIVE\ApiTests\Unit\Contoller\BaseWebControllerTest::testRespondFileInBrowserShouldReturnHtmlForMarkdown";i:4;s:78:"AMBERSIVE\Tests\Unit\Helper\CacheHelperTest::testIfIsActiveReturnsNullIfNotSet";i:4;s:81:"AMBERSIVE\Tests\Unit\Helper\CacheHelperTest::testIfIsActiveReturnsFalseIfSetFalse";i:4;s:79:"AMBERSIVE\Tests\Unit\Helper\CacheHelperTest::testIfIsActiveReturnsTrueIfSetTrue";i:4;s:77:"AMBERSIVE\Tests\Unit\Helper\CacheHelperTest::testIfIsActiveReturnsNullIfReset";i:4;s:101:"AMBERSIVE\Tests\Unit\Helper\CacheHelperTest::testIfFingerprintReturnsIdIfAddUserConnectionFlagIsFalse";i:4;s:100:"AMBERSIVE\Tests\Unit\Helper\CacheHelperTest::testIfFingerprintReturnsIdIfAddUserConnectionFlagIsTrue";i:4;s:85:"AMBERSIVE\Tests\Unit\Helper\LanguageHelperTest::testIfLanguageHelperListReturnsValues";i:4;s:88:"AMBERSIVE\Tests\Unit\Helper\ResourceHelperTest::testIfGetClassesReturnsFalseIfPathIsNull";i:4;s:95:"AMBERSIVE\Tests\Unit\Helper\ResourceHelperTest::testIfGetClassesReturnsFalseIfPathIsNotSetAtAll";i:4;s:80:"AMBERSIVE\Tests\Unit\Helper\ResourceHelperTest::testIfGetClassesWillListAllFiles";i:4;s:114:"AMBERSIVE\Tests\Unit\Helper\ResourceHelperTest::testIfResourceHelperDoesNotThrowAnErrorIfRemoveNameSpaceIsProvided";i:4;s:80:"AMBERSIVE\Tests\Unit\Helper\ResourceHelperTest::testIfGetNameSpaceReturnsNullIfA";i:4;s:92:"AMBERSIVE\Tests\Unit\Helper\ResourceHelperTest::testIfGetClassesWillReturnAnArrayOfInstances";i:4;s:106:"AMBERSIVE\Tests\Unit\Helper\ResourceHelperTest::testIfGetClassesWillReturnAnEmptyArrayIfPatternNotMatching";i:4;s:86:"AMBERSIVE\Tests\Unit\Helper\ResourceHelperTest::testIfGetClassesAcceptsTheListOnlyFlag";i:4;s:89:"AMBERSIVE\Tests\Unit\Helper\ResourceHelperTest::testIfGetClassesAcceptsTheExceptAttribute";i:4;s:94:"AMBERSIVE\Tests\Unit\Helper\ResourceHelperTest::testIfGetClassesAcceptsTheWithoutNameSpaceFlag";i:4;s:96:"AMBERSIVE\Tests\Unit\Helper\ResourceHelperTest::testIfGetClassesAcceptsTheReturnAsCollectionFlag";i:4;s:83:"AMBERSIVE\Tests\Unit\Helper\ResourceHelperTest::testIfGetModelsReturnsAListOfModels";i:4;s:89:"AMBERSIVE\Tests\Unit\Helper\ResourceHelperTest::testIfGetModelsReturnsACollectionOfModels";i:4;s:78:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfThePathFunctionReturnAPath";i:4;s:102:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfCreateSchemaThrowExceptionCauseFirstParamIsInvalid";i:4;s:97:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfCreateSchemaWillThrowExceptionIfContentIsNull";i:4;s:103:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfCreateSchemaWillThrowExceptionIfContentIsEmptyArray";i:4;s:81:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfCreateSchemaWillCreateASchema";i:4;s:81:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfDeleteSchemaWillDeleteASchema";i:4;s:100:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfDeleteSchemaWillReturnFalseIfThereIsNoSchemaFile";i:4;s:79:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfReadSchemaWillReturnAnArray";i:4;s:93:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfReadSchemaWillReturnNullIfSchemaNotExists";i:4;s:78:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfRestSchemaAcceptCustomPath";i:4;s:73:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfExistsWillReturnFalse";i:4;s:86:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfExistsWillReturnTrueIfSchemaExists";i:4;s:82:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfDefaultSchemaWillNotReturnNull";i:4;s:83:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfExtractColumnsWillReturnColumns";i:4;s:90:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfReadAndCreateWillEndInSameResultSimple";i:4;s:97:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfReadCreateWillEndInSameResultForDefaultSchema";i:4;s:87:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfExtractRelationsWillReturnRelations";i:4;s:104:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfExtractRelationsWillReturnRelationsBetweentTwoTables";i:4;s:83:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfIsLockedWillReturnABooleanValue";i:4;s:90:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfIsLockedReturnTrueIfSchemaFileIsLocked";i:4;s:76:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfGetValueWillReturnAValue";i:4;s:98:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfGetValueWillReturnNullIfAttributeDoesNotExists";i:4;s:91:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfListSchemasWillReturnAListOfSchemaFiles";i:4;s:79:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfCreateModelCreateAModelFile";i:4;s:111:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfCreateModelWillNotCreateAModelFileIfSchemaFileDoesNotExists";i:4;s:97:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfCreateModelDocumentationReturnsADocumentation";i:4;s:95:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfExtractNamespaceWillReturnACorrectNamespace";i:4;s:92:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfNullValueWillBeHandledInExtractNameSpace";i:4;s:90:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfExtractPathForFileWillReturnAValidPath";i:4;s:94:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfExtractPathForFileCanHandleNullAsParameter";i:4;s:92:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfExtractFolderForFileWillReturnFolderPath";i:4;s:104:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfExtractClassNameWillReturnAStringWithoutTheNamespace";i:4;s:97:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfExtractCustomAreaWillScrapeTheContentFromFile";i:4;s:103:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfExtractCustomAreaWillReturnEmptyIfAreaDoesNotExists";i:4;s:104:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfCreateBaseControllerWillCreateAUpdatedControllerFile";i:4;s:89:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfCreateResourceWillCreateAResourceFile";i:5;s:93:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfCreateCollectionWillCreateACollectionFile";i:5;s:93:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfCreateControllerWillCreateAControllerFile";i:5;s:107:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfCreateControllerMethodWillReturnValidControllerFunction";i:5;s:81:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfCreateTestWillCreateATestFile";i:5;s:85:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfCreatePolicyWillCreateAPolicyFile";i:5;s:94:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfUpdateAuthServiceProviderWillUpdateTheFile";i:5;s:101:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfTransformDeepAssocToStringArrayReturnAValidResult";i:4;s:121:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfTransformDeepAssocToStringArrayReturnAValidResultWithValidInformation";i:4;s:78:"AMBERSIVE\Tests\Unit\Helper\StubsHelperTest::testIfLoadStubWillReturnAStubFile";i:3;s:93:"AMBERSIVE\Tests\Unit\Helper\StubsHelperTest::testIfAnNotExistingStubFileWillReturnNullAsValue";i:4;s:85:"AMBERSIVE\Tests\Unit\Helper\StubsHelperTest::testIfPlaceholderReplacementIsSuccessful";i:3;}s:5:"times";a:174:{s:126:"AMBERSIVE\Tests\Feature\Controller\ForgotPasswordControllerTest::testIfForgotPasswordWillReturnStatusSuccessfulIfAccountExists";d:0.194;s:136:"AMBERSIVE\Tests\Feature\Controller\ForgotPasswordControllerTest::testIfForgotPasswordWillReturnStatusSuccessfulEvenIfAccountDoesnotExist";d:0.046;s:101:"AMBERSIVE\Tests\Feature\Controller\ForgotPasswordControllerTest::testIfForgotPasswordWillTriggerEvent";d:0.049;s:111:"AMBERSIVE\Tests\Feature\Controller\ForgotPasswordControllerTest::testIfForgotPasswordEventListenerReactsToEvent";d:0.047;s:126:"AMBERSIVE\Tests\Feature\Controller\ForgotPasswordControllerTest::testIfForgotPasswordWillCreateAndEntryInDatabaseWithResetCode";d:0.049;s:110:"AMBERSIVE\Tests\Feature\Controller\ForgotPasswordControllerTest::testIfForgotPasswordWillTriggerSendingAnEmail";d:0.049;s:110:"AMBERSIVE\Tests\Feature\Controller\ForgotPasswordControllerTest::testIfForgotPasswordMailWillContainAResetCode";d:0.048;s:100:"AMBERSIVE\Tests\Feature\Controller\ForgotPasswordControllerTest::testIfSetPasswordNeedsEmailOrUserId";d:0.047;s:110:"AMBERSIVE\Tests\Feature\Controller\ForgotPasswordControllerTest::testIfSetPasswordFailsIfNotOldPasswordIsGiven";d:0.051;s:114:"AMBERSIVE\Tests\Feature\Controller\ForgotPasswordControllerTest::testIfSetPasswordFailsAlsoIfNoResetCodeIsProvided";d:0.048;s:102:"AMBERSIVE\Tests\Feature\Controller\ForgotPasswordControllerTest::testIfSetPasswordChecksIfUserIdExists";d:0.047;s:101:"AMBERSIVE\Tests\Feature\Controller\ForgotPasswordControllerTest::testIfSetPasswordChecksIfEmailExists";d:0.048;s:114:"AMBERSIVE\Tests\Feature\Controller\ForgotPasswordControllerTest::testIfSetPasswordFailsIfTheResetCodeIsAlreadyUsed";d:0.049;s:110:"AMBERSIVE\Tests\Feature\Controller\ForgotPasswordControllerTest::testIfSetPasswordFailsIfTheResetCodeIsExpired";d:0.05;s:136:"AMBERSIVE\Tests\Feature\Controller\ForgotPasswordControllerTest::testIfSetPasswordWillNotReturnExpiredTokenIfRequestIsWithinTheTimeframe";d:0.048;s:122:"AMBERSIVE\Tests\Feature\Controller\ForgotPasswordControllerTest::testIfSetPasswordWIllFailIfTheGivenOldPasswordIsIncorrect";d:0.049;s:108:"AMBERSIVE\Tests\Feature\Controller\ForgotPasswordControllerTest::testIfSetPasswordWorksIfOldPasswordIsPassed";d:0.049;s:111:"AMBERSIVE\Tests\Feature\Controller\ForgotPasswordControllerTest::testIfSetPasswordWorksIfValidResetCodeIsPassed";d:0.048;s:92:"AMBERSIVE\Tests\Feature\Controller\LoginControllerTest::testLoginWorksWithCorrectCredentials";d:0.054;s:91:"AMBERSIVE\Tests\Feature\Controller\LoginControllerTest::testIfLoginRequiresEmailAndPassword";d:0.051;s:89:"AMBERSIVE\Tests\Feature\Controller\LoginControllerTest::testIfLoginRequiresAExisitingUser";d:0.046;s:87:"AMBERSIVE\Tests\Feature\Controller\LoginControllerTest::testIfLoginRequiresAnActiveUser";d:0.048;s:99:"AMBERSIVE\Tests\Feature\Controller\LoginControllerTest::testIfLoginRequiresAnUserWithAVerifiedEMail";d:0.051;s:95:"AMBERSIVE\Tests\Feature\Controller\LoginControllerTest::testIfLoginRequiresAnUserWhoIsNotLocked";d:0.048;s:94:"AMBERSIVE\Tests\Feature\Controller\LoginControllerTest::testIfLoginWillFailIfTriedAfterALocked";d:0.055;s:95:"AMBERSIVE\Tests\Feature\Controller\LoginControllerTest::testIfLoginRequiresAUserWhoIsNotDeleted";d:0.048;s:96:"AMBERSIVE\Tests\Feature\Controller\LoginControllerTest::testIfRefreshTokenReturnsANewBearerToken";d:0.051;s:95:"AMBERSIVE\Tests\Feature\Controller\RegisterControllerTest::testIfRegistrationFailsDueValidation";d:0.048;s:100:"AMBERSIVE\Tests\Feature\Controller\RegisterControllerTest::testIfRegistrationFailsIfEmailAlreadyUsed";d:0.047;s:103:"AMBERSIVE\Tests\Feature\Controller\RegisterControllerTest::testIfRegistrationFailsIfUsernameAlreadyUsed";d:0.048;s:94:"AMBERSIVE\Tests\Feature\Controller\RegisterControllerTest::testIfRegistrationWillCreateAccount";d:0.06;s:94:"AMBERSIVE\Tests\Feature\Controller\RegisterControllerTest::testIfRegisteredUserWillNotBeActive";d:0.052;s:127:"AMBERSIVE\Tests\Feature\Controller\RegisterControllerTest::testIfRegistrationWithoutAutomaticActivationWillSendAnActivationMail";d:0.05;s:100:"AMBERSIVE\Tests\Feature\Controller\RegisterControllerTest::testIfRegistrationFlowWithActivationWorks";d:0.055;s:114:"AMBERSIVE\Tests\Feature\Controller\RegisterControllerTest::testIfRegistrationFlowWithAcceptHtmlWillCauseAnRedirect";d:0.055;s:97:"AMBERSIVE\Tests\Feature\Controller\RegisterControllerTest::testIfActivationWillFailIfUserIsLocked";d:0.054;s:106:"AMBERSIVE\Tests\Feature\Controller\RegisterControllerTest::testIfActivationWillFailIfUserIsAlreadyVerified";d:0.054;s:111:"AMBERSIVE\Tests\Feature\Controller\RegisterControllerTest::testIfActivationWillFailAndWillRedirectToFailureSite";d:0.055;s:89:"AMBERSIVE\Tests\Feature\Controller\UserControllerTest::testIfCurrentReturnsTheCurrentUser";d:0.058;s:117:"AMBERSIVE\Tests\Feature\Controller\UserControllerTest::testIfAnUnauthorizedRequestWillRecieveA401IfCurrentIsRequested";d:0.052;s:102:"AMBERSIVE\Tests\Feature\Controller\UserControllerTest::testIfAnotherUserCannotGetTheDataForAnotherUser";d:0.064;s:108:"AMBERSIVE\Tests\Feature\Controller\UserControllerTest::testIfUserHasThePermissionToAccessTheDataOfHisAccount";d:0.058;s:106:"AMBERSIVE\Tests\Feature\Controller\UserControllerTest::testIfUserCannotAccessHisDataIfPermissionsIsMissing";d:0.056;s:84:"AMBERSIVE\Tests\Unit\Classes\EndpointRequestTest::testIfModelWillBeSetAtConstruction";d:0.055;s:87:"AMBERSIVE\Tests\Unit\Classes\EndpointRequestTest::testIfResourceWillBeSetAtConstruction";d:0.054;s:89:"AMBERSIVE\Tests\Unit\Classes\EndpointRequestTest::testIfCollectionWillBeSetAtConstruction";d:0.058;s:96:"AMBERSIVE\Tests\Unit\Classes\EndpointRequestTest::testIfEndpointRequestLoadWillFillTheDataBucket";d:0.058;s:104:"AMBERSIVE\Tests\Unit\Classes\EndpointRequestTest::testIfEndpointRequestLoadWithAPassedIdWillASingleEntry";d:0.056;s:79:"AMBERSIVE\Tests\Unit\Classes\EndpointRequestTest::testEndpointRequestSetHandler";d:0.057;s:107:"AMBERSIVE\Tests\Unit\Classes\EndpointRequestTest::testEndpointRequestSetHandlerAcceptsAndTriggerTheCustomFn";d:0.074;s:112:"AMBERSIVE\Tests\Unit\Classes\EndpointRequestTest::testEndpointRequestRespondMethodIfItReturnsAValidJsonStructure";d:0.065;s:95:"AMBERSIVE\Tests\Unit\Classes\EndpointRequestTest::testEndpointRequestRespondResourceIfRequested";d:0.058;s:94:"AMBERSIVE\Tests\Unit\Classes\EndpointRequestTest::testIfEndpointRequestRequestDataContainsData";d:0.056;s:100:"AMBERSIVE\Tests\Unit\Classes\EndpointRequestTest::testIfEndpointRequestAddRequestDataAllowsToAddData";d:0.057;s:97:"AMBERSIVE\Tests\Unit\Classes\EndpointRequestTest::testIfEndpointRequestStoreMethodCreateANewEntry";d:0.059;s:95:"AMBERSIVE\Tests\Unit\Classes\EndpointRequestTest::testIfEndpointRequestDestroyWillDeleteAnEntry";d:0.056;s:99:"AMBERSIVE\Tests\Unit\Classes\EndpointRequestTest::testIfEndpointRequestDestroyWillFailForSecondTime";d:0.055;s:93:"AMBERSIVE\Tests\Unit\Classes\EndpointRequestTest::testIfEndpointReqestUpdateWillUpdateAnEntry";d:0.056;s:85:"AMBERSIVE\Tests\Unit\Classes\SchemaDeclarationTest::testIfSchemaDeclarationIsNotEmpty";d:0.043;s:97:"AMBERSIVE\Tests\Unit\Classes\SchemaDeclarationTest::testIfSchemaDeclarationUpdateWillUpdateParams";d:0.043;s:85:"AMBERSIVE\Tests\Unit\Classes\SchemaDeclarationTest::testIfToArrayMethodReturnsAnArray";d:0.041;s:96:"AMBERSIVE\Tests\Unit\Classes\SchemaDeclarationTest::testIfSchemaDeclarationContainsTypeAttribute";d:0.042;s:109:"AMBERSIVE\Tests\Unit\Classes\SchemaDeclarationTest::testIfSchemaDeclarationContainsASetDefaultEndpointsMethod";d:0.05;s:120:"AMBERSIVE\Tests\Unit\Classes\SchemaDeclarationTest::testIfSchemaDeclarationSetDefaultEndpointsWillAddTheDefaultEndpoints";d:0.046;s:90:"AMBERSIVE\Tests\Unit\Classes\SchemaDeclarationTest::testIfSchemaDeclartionsCanAddAEndpoint";d:0.046;s:96:"AMBERSIVE\Tests\Unit\Classes\SchemaDeclarationTest::testIfSchemaDeclarationEndpointsCanBeReseted";d:0.045;s:103:"AMBERSIVE\Tests\Unit\Classes\SchemaDeclarationTest::testIfSchemaDeclarationSetModelWillSetTheModelEntry";d:0.047;s:121:"AMBERSIVE\Tests\Unit\Classes\SchemaDeclarationTest::testIfSchemaDeclarationCreateNamespacePrefixForModelWillReturnAString";d:0.044;s:109:"AMBERSIVE\Tests\Unit\Classes\SchemaDeclarationTest::testIfSchemaDeclarationSetResourceWillSetTheResourceEntry";d:0.044;s:109:"AMBERSIVE\Tests\Unit\Classes\SchemaDeclarationTest::testIfSchemaDeclarationSetResourceEvenIfNoModelIsProvided";d:0.046;s:113:"AMBERSIVE\Tests\Unit\Classes\SchemaDeclarationTest::testIfSchemaDeclarationSetCollectionWillSetTheCollectionEntry";d:0.044;s:111:"AMBERSIVE\Tests\Unit\Classes\SchemaDeclarationTest::testIfSchemaDeclarationSetCollectionEvenIfNoModelIsProvided";d:0.044;s:79:"AMBERSIVE\Tests\Unit\Classes\SchemaEndpointTest::testIfSchemaEndpointIsNotEmpty";d:0.044;s:82:"AMBERSIVE\Tests\Unit\Classes\SchemaEndpointTest::testIfToArrayMethodReturnsAnArray";d:0.044;s:90:"AMBERSIVE\Tests\Unit\Classes\SchemaEndpointTest::testIfSchemaEndpointContainsTypeAttribute";d:0.045;s:73:"AMBERSIVE\Tests\Unit\Classes\SchemaFieldTest::testIfSchemaFieldIsNotEmpty";d:0.05;s:79:"AMBERSIVE\Tests\Unit\Classes\SchemaFieldTest::testIfToArrayMethodReturnsAnArray";d:0.043;s:84:"AMBERSIVE\Tests\Unit\Classes\SchemaFieldTest::testIfSchemaFieldContainsTypeAttribute";d:0.042;s:83:"AMBERSIVE\Tests\Unit\Classes\SchemaPermissionTest::testIfSchemaPermissionIsNotEmpty";d:0.042;s:84:"AMBERSIVE\Tests\Unit\Classes\SchemaPermissionTest::testIfToArrayMethodReturnsAnArray";d:0.042;s:94:"AMBERSIVE\Tests\Unit\Classes\SchemaPermissionTest::testIfSchemaPermissionContainsTypeAttribute";d:0.042;s:79:"AMBERSIVE\Tests\Unit\Classes\SchemaRelationTest::testIfSchemaRelationIsNotEmpty";d:0.041;s:82:"AMBERSIVE\Tests\Unit\Classes\SchemaRelationTest::testIfToArrayMethodReturnsAnArray";d:0.042;s:90:"AMBERSIVE\Tests\Unit\Classes\SchemaRelationTest::testIfSchemaRelationContainsTypeAttribute";d:0.042;s:71:"AMBERSIVE\Tests\Unit\Classes\SchemaRoleTest::testIfSchemaRoleIsNotEmpty";d:0.042;s:78:"AMBERSIVE\Tests\Unit\Classes\SchemaRoleTest::testIfToArrayMethodReturnsAnArray";d:0.042;s:82:"AMBERSIVE\Tests\Unit\Classes\SchemaRoleTest::testIfSchemaRoleContainsTypeAttribute";d:0.042;s:74:"AMBERSIVE\Tests\Unit\Console\MakeApiTest::testIfMakeApiWithoutCommandFails";d:0.043;s:72:"AMBERSIVE\Tests\Unit\Console\NewApiTest::testIfNewApiWithoutCommandFails";d:0.043;s:88:"AMBERSIVE\Tests\Unit\Console\NewApiTest::testIfNewApiWillCreateAMigrationFileForANewFile";d:0.044;s:70:"AMBERSIVE\Tests\Unit\Console\PrepareApiTest::testIfPrepareCommandWorks";d:0.043;s:69:"AMBERSIVE\Tests\Unit\Console\UpdateApiTest::testIfPrepareCommandWorks";d:0.043;s:95:"AMBERSIVE\ApiTests\Unit\Contoller\BaseApiControllerTest::testGetReturnFormatShouldReturnNotNull";d:0.042;s:81:"AMBERSIVE\ApiTests\Unit\Contoller\BaseApiControllerTest::testGetDefaultStatusCode";d:0.042;s:108:"AMBERSIVE\ApiTests\Unit\Contoller\BaseApiControllerTest::testSetReturnFormatShouldChangeTheReturnFormatValue";d:0.042;s:102:"AMBERSIVE\ApiTests\Unit\Contoller\BaseApiControllerTest::testControllerParamsShouldContainDownloadFlag";d:0.042;s:111:"AMBERSIVE\ApiTests\Unit\Contoller\BaseApiControllerTest::testControllerParamsShouldContainDownloadFlagWithFalse";d:0.042;s:81:"AMBERSIVE\ApiTests\Unit\Contoller\BaseApiControllerTest::testSettingTheStatusCode";d:0.043;s:75:"AMBERSIVE\ApiTests\Unit\Contoller\BaseApiControllerTest::testRespondSuccess";d:0.043;s:80:"AMBERSIVE\ApiTests\Unit\Contoller\BaseApiControllerTest::testRespondUnauthorized";d:0.049;s:77:"AMBERSIVE\ApiTests\Unit\Contoller\BaseApiControllerTest::testRespondForbidden";d:0.042;s:78:"AMBERSIVE\ApiTests\Unit\Contoller\BaseApiControllerTest::testRespondBadRequest";d:0.042;s:98:"AMBERSIVE\ApiTests\Unit\Contoller\BaseWebControllerTest::testRespondFileAsDownloadShouldReturnFile";d:0.043;s:116:"AMBERSIVE\ApiTests\Unit\Contoller\BaseWebControllerTest::testRespondFileAsDownloadShouldReturn404IfFileDoesNotExists";d:0.042;s:110:"AMBERSIVE\ApiTests\Unit\Contoller\BaseWebControllerTest::testIfRespondFileAsDownloadAcceptsTheProvidedFilename";d:0.043;s:97:"AMBERSIVE\ApiTests\Unit\Contoller\BaseWebControllerTest::testRespondFileInBrowserShouldReturnFile";d:0.042;s:108:"AMBERSIVE\ApiTests\Unit\Contoller\BaseWebControllerTest::testRespondFileInBrowserShouldReturnHtmlForMarkdown";d:0.046;s:78:"AMBERSIVE\Tests\Unit\Helper\CacheHelperTest::testIfIsActiveReturnsNullIfNotSet";d:0.042;s:81:"AMBERSIVE\Tests\Unit\Helper\CacheHelperTest::testIfIsActiveReturnsFalseIfSetFalse";d:0.043;s:79:"AMBERSIVE\Tests\Unit\Helper\CacheHelperTest::testIfIsActiveReturnsTrueIfSetTrue";d:0.042;s:77:"AMBERSIVE\Tests\Unit\Helper\CacheHelperTest::testIfIsActiveReturnsNullIfReset";d:0.041;s:101:"AMBERSIVE\Tests\Unit\Helper\CacheHelperTest::testIfFingerprintReturnsIdIfAddUserConnectionFlagIsFalse";d:0.042;s:100:"AMBERSIVE\Tests\Unit\Helper\CacheHelperTest::testIfFingerprintReturnsIdIfAddUserConnectionFlagIsTrue";d:0.05;s:85:"AMBERSIVE\Tests\Unit\Helper\LanguageHelperTest::testIfLanguageHelperListReturnsValues";d:0.042;s:88:"AMBERSIVE\Tests\Unit\Helper\ResourceHelperTest::testIfGetClassesReturnsFalseIfPathIsNull";d:0.042;s:95:"AMBERSIVE\Tests\Unit\Helper\ResourceHelperTest::testIfGetClassesReturnsFalseIfPathIsNotSetAtAll";d:0.042;s:80:"AMBERSIVE\Tests\Unit\Helper\ResourceHelperTest::testIfGetClassesWillListAllFiles";d:0.042;s:114:"AMBERSIVE\Tests\Unit\Helper\ResourceHelperTest::testIfResourceHelperDoesNotThrowAnErrorIfRemoveNameSpaceIsProvided";d:0.042;s:80:"AMBERSIVE\Tests\Unit\Helper\ResourceHelperTest::testIfGetNameSpaceReturnsNullIfA";d:0.043;s:92:"AMBERSIVE\Tests\Unit\Helper\ResourceHelperTest::testIfGetClassesWillReturnAnArrayOfInstances";d:0.042;s:106:"AMBERSIVE\Tests\Unit\Helper\ResourceHelperTest::testIfGetClassesWillReturnAnEmptyArrayIfPatternNotMatching";d:0.042;s:86:"AMBERSIVE\Tests\Unit\Helper\ResourceHelperTest::testIfGetClassesAcceptsTheListOnlyFlag";d:0.043;s:89:"AMBERSIVE\Tests\Unit\Helper\ResourceHelperTest::testIfGetClassesAcceptsTheExceptAttribute";d:0.042;s:94:"AMBERSIVE\Tests\Unit\Helper\ResourceHelperTest::testIfGetClassesAcceptsTheWithoutNameSpaceFlag";d:0.042;s:96:"AMBERSIVE\Tests\Unit\Helper\ResourceHelperTest::testIfGetClassesAcceptsTheReturnAsCollectionFlag";d:0.043;s:83:"AMBERSIVE\Tests\Unit\Helper\ResourceHelperTest::testIfGetModelsReturnsAListOfModels";d:0.048;s:89:"AMBERSIVE\Tests\Unit\Helper\ResourceHelperTest::testIfGetModelsReturnsACollectionOfModels";d:0.044;s:78:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfThePathFunctionReturnAPath";d:0.043;s:102:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfCreateSchemaThrowExceptionCauseFirstParamIsInvalid";d:0.043;s:97:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfCreateSchemaWillThrowExceptionIfContentIsNull";d:0.044;s:103:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfCreateSchemaWillThrowExceptionIfContentIsEmptyArray";d:0.043;s:81:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfCreateSchemaWillCreateASchema";d:0.046;s:81:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfDeleteSchemaWillDeleteASchema";d:0.043;s:100:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfDeleteSchemaWillReturnFalseIfThereIsNoSchemaFile";d:0.044;s:79:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfReadSchemaWillReturnAnArray";d:0.044;s:93:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfReadSchemaWillReturnNullIfSchemaNotExists";d:0.044;s:78:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfRestSchemaAcceptCustomPath";d:0.046;s:73:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfExistsWillReturnFalse";d:0.043;s:86:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfExistsWillReturnTrueIfSchemaExists";d:0.044;s:82:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfDefaultSchemaWillNotReturnNull";d:0.051;s:83:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfExtractColumnsWillReturnColumns";d:0.044;s:90:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfReadAndCreateWillEndInSameResultSimple";d:0.047;s:97:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfReadCreateWillEndInSameResultForDefaultSchema";d:0.044;s:87:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfExtractRelationsWillReturnRelations";d:0.045;s:104:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfExtractRelationsWillReturnRelationsBetweentTwoTables";d:0.045;s:83:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfIsLockedWillReturnABooleanValue";d:0.047;s:90:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfIsLockedReturnTrueIfSchemaFileIsLocked";d:0.045;s:76:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfGetValueWillReturnAValue";d:0.044;s:98:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfGetValueWillReturnNullIfAttributeDoesNotExists";d:0.045;s:91:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfListSchemasWillReturnAListOfSchemaFiles";d:0.044;s:79:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfCreateModelCreateAModelFile";d:0.555;s:111:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfCreateModelWillNotCreateAModelFileIfSchemaFileDoesNotExists";d:0.046;s:97:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfCreateModelDocumentationReturnsADocumentation";d:0.052;s:95:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfExtractNamespaceWillReturnACorrectNamespace";d:0.046;s:92:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfNullValueWillBeHandledInExtractNameSpace";d:0.047;s:90:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfExtractPathForFileWillReturnAValidPath";d:0.045;s:94:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfExtractPathForFileCanHandleNullAsParameter";d:0.047;s:92:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfExtractFolderForFileWillReturnFolderPath";d:0.048;s:104:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfExtractClassNameWillReturnAStringWithoutTheNamespace";d:0.046;s:97:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfExtractCustomAreaWillScrapeTheContentFromFile";d:0.559;s:103:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfExtractCustomAreaWillReturnEmptyIfAreaDoesNotExists";d:0.575;s:104:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfCreateBaseControllerWillCreateAUpdatedControllerFile";d:0.052;s:89:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfCreateResourceWillCreateAResourceFile";d:0.046;s:93:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfCreateCollectionWillCreateACollectionFile";d:0.045;s:93:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfCreateControllerWillCreateAControllerFile";d:0.046;s:107:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfCreateControllerMethodWillReturnValidControllerFunction";d:0.047;s:81:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfCreateTestWillCreateATestFile";d:0.058;s:85:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfCreatePolicyWillCreateAPolicyFile";d:0.051;s:94:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfUpdateAuthServiceProviderWillUpdateTheFile";d:0.048;s:101:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfTransformDeepAssocToStringArrayReturnAValidResult";d:0.047;s:121:"AMBERSIVE\Tests\Unit\Helper\SchemaHelperTest::testIfTransformDeepAssocToStringArrayReturnAValidResultWithValidInformation";d:0.045;s:78:"AMBERSIVE\Tests\Unit\Helper\StubsHelperTest::testIfLoadStubWillReturnAStubFile";d:0.041;s:93:"AMBERSIVE\Tests\Unit\Helper\StubsHelperTest::testIfAnNotExistingStubFileWillReturnNullAsValue";d:0.044;s:85:"AMBERSIVE\Tests\Unit\Helper\StubsHelperTest::testIfPlaceholderReplacementIsSuccessful";d:0.042;}}}